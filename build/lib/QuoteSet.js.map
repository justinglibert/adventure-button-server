{"version":3,"sources":["../../lib/lib/QuoteSet.js"],"names":["Leg","Quote","QuoteSet","constructor","Quotes","Places","Carriers","Currencies","referral_url","length","row","index","quote","outbound","createLeg","OutboundLeg","inbound","InboundLeg","QuoteId","MinPrice","Direct","map","fn","Object","keys","input","origin","findPlace","OriginId","destination","DestinationId","carriers","findCarriers","CarrierIds","DepartureDate","id","output","forEach","place","PlaceId","carrier","indexOf","CarrierId","push","referralUrl"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,MAAMC,QAAN,CAAe;;AAE1BC,gBAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,UAAtC,EAAkDC,YAAlD,EAAgE;AAC5D,aAAKJ,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,UAAL,GAAkBA,UAAlB;;AAEA,aAAKC,YAAL,GAAoBA,YAApB;AACH;;AAEDC,aAAS;AACL,eAAO,KAAKL,MAAL,CAAYK,MAAnB;AACH;;AAEDC,QAAIC,KAAJ,EAAW;AACP,cAAMC,QAAQ,KAAKR,MAAL,CAAYO,KAAZ,CAAd;;AAEA,cAAME,WAAW,KAAKC,SAAL,CAAeF,MAAMG,WAArB,CAAjB;AACA,cAAMC,UAAU,KAAKF,SAAL,CAAeF,MAAMK,UAArB,CAAhB;;AAEA,eAAO,IAAIhB,KAAJ,CAAUW,MAAMM,OAAhB,EAAyB,KAAKX,UAAL,CAAgB,CAAhB,CAAzB,EAA6CK,MAAMO,QAAnD,EAA6DP,MAAMQ,MAAnE,EAA2EP,QAA3E,EAAqFG,OAArF,CAAP;AACH;;AAEDK,QAAIC,EAAJ,EAAQ;AACJ,eAAOC,OAAOC,IAAP,CAAY,KAAKpB,MAAjB,EAAyBiB,GAAzB,CAA6BV,SAAS;AACzC,mBAAOW,GAAG,KAAKZ,GAAL,CAASC,KAAT,CAAH,EAAoBA,KAApB,CAAP;AACH,SAFM,CAAP;AAGH;;AAEDG,cAAUW,KAAV,EAAiB;AACb,YAAKA,KAAL,EAAa;AACT,kBAAMC,SAAS,KAAKC,SAAL,CAAeF,MAAMG,QAArB,CAAf;AACA,kBAAMC,cAAc,KAAKF,SAAL,CAAeF,MAAMK,aAArB,CAApB;AACA,kBAAMC,WAAW,KAAKC,YAAL,CAAkBP,MAAMQ,UAAxB,CAAjB;;AAEA,mBAAO,IAAIjC,GAAJ,CAAQyB,MAAMS,aAAd,EAA6BR,MAA7B,EAAqCG,WAArC,EAAkDE,QAAlD,CAAP;AACH;AACJ;;AAEDJ,cAAUQ,EAAV,EAAc;AACV,YAAIC,MAAJ;;AAEA,aAAK/B,MAAL,CAAYgC,OAAZ,CAAoBC,SAAS;AACzB,gBAAKA,MAAMC,OAAN,IAAiBJ,EAAtB,EAA2B;AACvBC,yBAASE,KAAT;AACH;AACJ,SAJD;;AAMA,eAAOF,MAAP;AACH;;AAEDJ,iBAAaP,QAAQ,EAArB,EAAyB;AACrB,YAAIW,SAAS,EAAb;;AAEA,aAAK9B,QAAL,CAAc+B,OAAd,CAAsBG,WAAW;AAC7B,gBAAKf,MAAMgB,OAAN,CAAcD,QAAQE,SAAtB,IAAmC,CAAC,CAAzC,EAA6C;AACzCN,uBAAOO,IAAP,CAAYH,OAAZ;AACH;AACJ,SAJD;;AAMA,eAAOJ,MAAP;AACH;;AAEDQ,kBAAc;AACV,eAAO,KAAKpC,YAAZ;AACH;AAlEyB","file":"QuoteSet.js","sourcesContent":["import Leg from './Leg';\nimport Quote from './Quote';\n\nexport default class QuoteSet {\n\n    constructor(Quotes, Places, Carriers, Currencies, referral_url) {\n        this.Quotes = Quotes;\n        this.Places = Places;\n        this.Carriers = Carriers;\n        this.Currencies = Currencies;\n\n        this.referral_url = referral_url;\n    }\n\n    length() {\n        return this.Quotes.length;\n    }\n\n    row(index) {\n        const quote = this.Quotes[index];\n\n        const outbound = this.createLeg(quote.OutboundLeg);\n        const inbound = this.createLeg(quote.InboundLeg);\n\n        return new Quote(quote.QuoteId, this.Currencies[0], quote.MinPrice, quote.Direct, outbound, inbound)\n    }\n\n    map(fn) {\n        return Object.keys(this.Quotes).map(index => {\n            return fn(this.row(index), index)\n        });\n    }\n\n    createLeg(input) {\n        if ( input ) {\n            const origin = this.findPlace(input.OriginId);\n            const destination = this.findPlace(input.DestinationId);\n            const carriers = this.findCarriers(input.CarrierIds);\n\n            return new Leg(input.DepartureDate, origin, destination, carriers);\n        }\n    }\n\n    findPlace(id) {\n        let output;\n\n        this.Places.forEach(place => {\n            if ( place.PlaceId == id ) {\n                output = place;\n            }\n        });\n\n        return output;\n    }\n\n    findCarriers(input = []) {\n        let output = [];\n\n        this.Carriers.forEach(carrier => {\n            if ( input.indexOf(carrier.CarrierId) > -1 ) {\n                output.push(carrier);\n            }\n        });\n\n        return output;\n    }\n\n    referralUrl() {\n        return this.referral_url;\n    }\n}\n"]}